// Generated by CoffeeScript 1.7.1
(function() {
  var Index;

  Index = (function() {
    Index.prototype.checker = true;

    Index.prototype.settingsChecker = false;

    Index.prototype.form = null;

    Index.prototype.Life = null;

    Index.prototype.setBut = document.getElementById('setBut');

    Index.prototype.fsPlus = document.getElementById('fsPlus');

    Index.prototype.fsMinus = document.getElementById('fsMinus');

    Index.prototype.csPlus = document.getElementById('csPlus');

    Index.prototype.csMinus = document.getElementById('csMinus');

    Index.prototype.cstartStop = document.getElementById('startStop');

    Index.prototype.saveBut = document.getElementById('saveBut');

    Index.prototype.nextGener = document.getElementById('nextGen');

    Index.prototype.genNum = document.getElementById('genNum');

    Index.prototype.clearFieldBut = document.getElementById('clearField');

    Index.prototype.saveToDbBut = document.getElementById('saveToDbBut');

    function Index() {
      this.Life = new GameOfLife();
      this.fsPlus.onmousedown = this.fsPlusOnclick;
      this.fsPlus.parent = this;
      this.fsMinus.onmousedown = this.fsMinusOnclick;
      this.fsMinus.parent = this;
      this.setBut.onmousedown = this.settings;
      this.setBut.parent = this;
      this.csPlus.onmousedown = this.csPlusOnclick;
      this.csPlus.parent = this;
      this.csMinus.onmousedown = this.csMinusOnclick;
      this.csMinus.parent = this;
      this.cstartStop.onmousedown = this.startStop;
      this.cstartStop.parent = this;
      this.saveBut.onmousedown = this.save;
      this.saveBut.parent = this;
      this.nextGener.onmousedown = this.nextGen;
      this.nextGener.parent = this;
      this.clearFieldBut.onmousedown = this.clearField;
      this.clearFieldBut.parent = this;
      this.saveToDbBut.onmousedown = this.saveToDb;
      this.saveToDbBut.parent = this;
    }

    Index.prototype.fsPlusOnclick = function() {
      this.parent.Life.numberOfRows = this.parent.Life.numberOfRows * 2;
      this.parent.Life.numberOfColumns = this.parent.Life.numberOfColumns * 2;
      this.parent.Life.resizeCanvas();
      this.parent.Life.drawGrid();
      return this.parent.Life.currentGenerationNum = 0;
    };

    Index.prototype.fsMinusOnclick = function() {
      this.parent.Life.numberOfRows = this.parent.Life.numberOfRows / 2;
      this.parent.Life.numberOfColumns = this.parent.Life.numberOfColumns / 2;
      this.parent.Life.resizeCanvas();
      this.parent.Life.drawGrid();
      return this.parent.Life.currentGenerationNum = 0;
    };

    Index.prototype.csPlusOnclick = function() {
      this.parent.Life.cellSize = this.parent.Life.cellSize + 1;
      this.parent.Life.resizeCanvas();
      return this.parent.Life.drawGrid();
    };

    Index.prototype.csMinusOnclick = function() {
      this.parent.Life.cellSize = this.parent.Life.cellSize - 1;
      this.parent.Life.resizeCanvas();
      return this.parent.Life.drawGrid();
    };

    Index.prototype.nextGen = function() {
      this.parent.Life.evolveCellGeneration();
      return this.parent.Life.drawGrid();
    };

    Index.prototype.save = function() {
      var counter, deadCrit, elem, liveCrit, _i, _j, _len, _len1, _ref, _ref1;
      this.parent.Life.deadCreteria = [];
      this.parent.Life.liveCreteria = [];
      liveCrit = document.getElementById('liveDiv');
      deadCrit = document.getElementById('deadDiv');
      counter = 0;
      _ref = liveCrit.children;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elem = _ref[_i];
        counter++;
        if (elem.checked) {
          this.parent.Life.liveCreteria.push(counter);
        }
      }
      counter = 0;
      _ref1 = deadCrit.children;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        elem = _ref1[_j];
        counter++;
        if (elem.checked) {
          this.parent.Life.deadCreteria.push(counter);
        }
      }
      return this.parent.Life.currentGenerationNum = 0;
    };

    Index.prototype.clearField = function() {
      return this.parent.Life.clearField();
    };

    Index.prototype.settings = function() {
      var set;
      set = document.getElementById('settings');
      if (this.parent.settingsChecker === false) {
        set.style.visibility = 'visible';
        return this.parent.settingsChecker = true;
      } else {
        set.style.visibility = 'hidden';
        return this.parent.settingsChecker = false;
      }
    };

    Index.prototype.startStop = function() {
      if (this.parent.checker === false) {
        this.parent.Life.stop();
        return this.parent.checker = true;
      } else {
        this.parent.Life.tick();
        return this.parent.checker = false;
      }
    };

    return Index;

  })();

  window.Index = Index;

}).call(this);
